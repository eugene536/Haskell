
==================== FINAL INTERFACE ====================
2016-11-07 13:58:51.481573 UTC

interface test2_JQULrSP5qhp1sMjou4dkJT:SafeHead 7103
  interface hash: 947df036f6485d720890f7bb193ec4c4
  ABI hash: 4c01d557a9c9b20e354798505c35a654
  export-list hash: 4f6b8f2ddedf81aa186812fab280db38
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  SafeHead.safeHead
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
a0612828628ca15a4ca5413ed87d9760
  safeHead :: [a] -> GHC.Base.Maybe a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a x :: [a] ->
                 case x of wild {
                   [] -> GHC.Base.Nothing @ a : y ys -> GHC.Base.Just @ a y }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

